.cta-btn {
  display: inline-block;
  background-color: var(--secondary-color);
  color: var(--light-text);
  padding: 12px 30px;
  border-radius: 50px;
  text-decoration: none;
  font-weight: 600;
  transition: all 0.3s ease;
  border: 2px solid var(--secondary-color);
  /* Removed animation properties, will be applied dynamically or via layout if specific to hero */
}

.cta-btn:hover {
  background-color: transparent;
  /* color: var(--light-text); */ /* This depends on context, for hero it's light, might need to be adaptable */
}

.product-card {
  background-color: #fff;
  border-radius: 10px;
  overflow: hidden;
  width: 300px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
  transform: translateY(50px); /* Initial state for JS animation */
  opacity: 0; /* Initial state for JS animation */
}

.product-card.visible { /* Class added by JS */
  transform: translateY(0);
  opacity: 1;
}

.product-card:hover {
  transform: translateY(-10px); /* Keep hover effect separate from visibility animation */
  box-shadow: 0 15px 40px rgba(0, 0, 0, 0.2);
}

.product-image {
  height: 200px;
  overflow: hidden;
}

.product-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.5s ease;
}

.product-card:hover .product-image img {
  transform: scale(1.1);
}

.product-info {
  padding: 20px;
}

.product-info h3 {
  font-size: 1.3rem;
  margin-bottom: 10px;
}

.value-card {
  background-color: rgba(255, 255, 255, 0.1);
  border-radius: 10px;
  padding: 30px;
  width: 300px;
  backdrop-filter: blur(10px);
  transition: all 0.3s ease;
}

.value-card:hover {
  transform: translateY(-10px);
  background-color: rgba(255, 255, 255, 0.2);
}

.value-icon {
  font-size: 2.5rem;
  color: var(--accent-color);
  margin-bottom: 20px;
}

.value-card h3 {
  color: var(--light-text);
  font-size: 1.3rem;
  margin-bottom: 15px;
}

.application-item {
  background-color: var(--light-color);
  padding: 20px;
  border-radius: 10px;
  transition: all 0.3s ease;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  z-index: 1;
}

.application-item:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--primary-color);
  z-index: -1;
  transform: scaleX(0);
  transform-origin: right;
  transition: transform 0.5s ease;
}

.application-item:hover {
  color: var(--light-text);
}

.application-item:hover:before {
  transform: scaleX(1);
  transform-origin: left;
}

.application-item h3 {
  font-size: 1.2rem;
  margin-bottom: 10px;
  transition: color 0.3s ease;
}

.application-item:hover h3 {
  color: var(--light-text);
}

.stat-item {
  text-align: center;
  margin: 20px;
  width: 200px;
}

.stat-number {
  font-size: 3rem;
  font-weight: 700;
  color: var(--primary-color);
  margin-bottom: 10px;
  opacity: 0; /* Initial state for JS animation */
  transform: translateY(20px); /* Initial state for JS animation */
  transition: all 0.5s ease; /* Transition for JS animation */
}

.stat-number.visible { /* Class added by JS */
  opacity: 1;
  transform: translateY(0);
}

.stat-label {
  font-size: 1rem;
  color: var(--text-color);
}

.contact-form input,
.contact-form textarea {
  width: 100%;
  padding: 10px;
  border: 1px solid #ddd;
  border-radius: 5px;
  font-family: inherit;
  font-size: 1rem;
}

.contact-form textarea {
  height: 150px;
  resize: vertical;
}

.submit-btn { /* General button style, can be used for form submit */
  background-color: var(--primary-color);
  color: var(--light-text);
  border: none;
  padding: 12px 30px;
  border-radius: 50px;
  cursor: pointer;
  font-weight: 600;
  transition: all 0.3s ease;
}

.submit-btn:hover {
  background-color: var(--dark-color);
}

.img-hover-lift {
    transition: transform 0.3s ease-in-out;
}

.img-hover-lift:hover {
    transform: scale(1.05);
}

/* Animations */
@keyframes fadeInUp { /* General purpose fadeInUp, can be used by JS */
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes float {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-20px);
  }
  100% {
    transform: translateY(0px);
  }
}

/* Water Drops Animation Placeholder - actual drop styling */
.water-drop { /* Container for drops, if needed for positioning */
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
}

.water-drop span { /* Styling for individual drops generated by JS */
  position: absolute;
  width: 10px; /* Default, can be overridden by JS */
  height: 10px; /* Default, can be overridden by JS */
  background: rgba(255, 255, 255, 0.5);
  border-radius: 50%;
  pointer-events: none;
  box-shadow: 0 0 10px rgba(255, 255, 255, 0.5),
              0 0 20px rgba(255, 255, 255, 0.5),
              0 0 30px rgba(255, 255, 255, 0.5),
              0 0 40px rgba(255, 255, 255, 0.5);
  animation: animate 15s linear infinite; /* Default, can be overridden by JS */
}

@keyframes animate { /* Animation for water drops */
  0% {
    transform: translateY(0) scale(0);
    opacity: 1;
  }
  70% {
    opacity: 1;
  }
  100% {
    transform: translateY(-800px) scale(2); /* Target Y position, might need adjustment */
    opacity: 0;
  }
}
